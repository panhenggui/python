# coding: utf-8

"""
    BitMEX API

    ## REST API for the BitMEX Trading Platform  [View Changelog](/app/apiChangelog)    #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  *All* table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  *This is only a small subset of what is available, to get you started.*  Fill in the parameters and click the `Try it out!` button to try any of these queries.  * [Pricing Data](#!/Quote/Quote_get)  * [Trade Data](#!/Trade/Trade_get)  * [OrderBook Data](#!/OrderBook/OrderBook_getL2)  * [Settlement Data](#!/Settlement/Settlement_get)  * [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [⇩ Download Swagger JSON](swagger.json)    ## All API Endpoints  Click to expand a section.   # noqa: E501

    OpenAPI spec version: 1.2.0
    Contact: support@bitmex.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import
import os
import sys
sys.path.append(os.path.dirname(os.getcwd()))
import unittest

import swagger_client
from swagger_client.api.order_api import OrderApi  # noqa: E501
from excel.excel import ExcelClass
from public.single_api import FilterSingle
import sys

class TestOrderApi(unittest.TestCase,ExcelClass,FilterSingle):
    """OrderApi unit test stubs"""

    def setUp(self):

        self.api = swagger_client.api.order_api.OrderApi()  # noqa: E501
        path = '..\\xls\\example.xls'
        ExcelClass.__init__(self,path)
        FilterSingle.__init__(self)
        print 'setup'

    def tearDown(self):
        print 'teardown'
        pass

    def test_order_amend(self):
        """Test case for order_amend

        Amend the quantity or price of an open order.  # noqa: E501
        """
        current_api = '_'.join(sys._getframe().f_code.co_name.split('_')[1:])
        print current_api
        # self.single_api(self.params,current_api,self.api.order_amend)
        pass


    def test_order_amend_bulk(self):
        """Test case for order_amend_bulk

        Amend multiple orders for the same symbol.  # noqa: E501
        """
        current_api = '_'.join(sys._getframe().f_code.co_name.split('_')[1:])
        print current_api
        pass

    def test_order_cancel(self):
        """Test case for order_cancel

        Cancel order(s). Send multiple order IDs to cancel in bulk.  # noqa: E501
        """
        current_api = '_'.join(sys._getframe().f_code.co_name.split('_')[1:])
        # params = self.xl_parse(current_api)
        # actual_output_list =self.single_api(params,current_api,self.api.order_cancel)
        print current_api
        pass

    def test_order_cancel_all(self):
        """Test case for order_cancel_all

        Cancels all of your orders.  # noqa: E501
        """
        current_api = '_'.join(sys._getframe().f_code.co_name.split('_')[1:])
        params = self.xl_parse(current_api)
        actual_output_list =self.single_api(params,current_api,self.api.order_cancel_all)
        #写结果
        self.xlwt_right(current_api,actual_output_list)
        print current_api
        pass

    def test_order_cancel_all_after(self):
        """Test case for order_cancel_all_after

        Automatically cancel all your orders after a specified timeout.  # noqa: E501
        """
        current_api = '_'.join(sys._getframe().f_code.co_name.split('_')[1:])
        print current_api
        pass

    def test_order_close_position(self):
        """Test case for order_close_position

        Close a position. [Deprecated, use POST /order with execInst: 'Close']  # noqa: E501
        """
        current_api = '_'.join(sys._getframe().f_code.co_name.split('_')[1:])
        print current_api
        pass

    def test_order_get_orders(self):
        """Test case for order_get_orders

        Get your orders.  # noqa: E501
        """
        current_api = '_'.join(sys._getframe().f_code.co_name.split('_')[1:])
        print current_api
        kwargs = { "filter": {"symbol": "XBTUSD"},
                   'columns':{'side':'Buy'},
                   "count":float(1)
                   }
        results = self.api.order_get_orders(**kwargs)
        print results
        pass

    def test_order_new(self):
        """Test case for order_new

        Create a new order.  # noqa: E501
        """
        # 这里可以使用pandas去读取excel作为配置文件 added by chaiyu 2019-04-01
        current_api = '_'.join(sys._getframe().f_code.co_name.split('_')[1:])
        params = self.xl_parse(current_api)
        # actual_output_list = self.single_api(params,current_api,self.api.order_new)
        print current_api
        pass


    def test_order_new_bulk(self):
        """Test case for order_new_bulk

        Create multiple new orders for the same symbol.  # noqa: E501
        """
        current_api = '_'.join(sys._getframe().f_code.co_name.split('_')[1:])
        params = self.xl_parse(current_api)
        # actual_output_list = self.single_api(params,current_api,self.api.order_new_bulk)
        print current_api
        pass


if __name__ == '__main__':
    unittest.main()
